{"version":3,"file":"ColorItem.js","sourceRoot":"","sources":["ColorItem.tsx"],"names":[],"mappings":"OAAO,KAAK,KAAK,MAAM,OAAO;OACvB,KAAK,MAAM,MAAM,uBAAuB;AAgB/C,+BAA+B,KAAK,CAAC,SAAS;IAE7C,YAAY,KAAoB;QAC/B,MAAM,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,GAAG;YACZ,QAAQ,EAAC,KAAK,CAAC,QAAQ;SACvB,CAAC;IACH,CAAC;IACD,uBAAuB;IACvB,IAAI;IAEJ,WAAW;QAGV,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAEO,QAAQ;QACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC;IAC3D,CAAC;IAED,MAAM;QACL,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,SAAS,GAAE;YACd,KAAK,EAAC,OAAO,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG;SAC7C,CAAC;QACF,MAAM,CAAA,CACL,qBAAC,GAAG,IAAC,SAAS,EAAE,MAAM,CAAC,IAAK,GAC3B,qBAAC,GAAG,IAAE,OAAO,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,EAAG,EAAC,SAAS,EACtD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,qBAAqB,GAAG,GAAG,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YACxF,GACA,qBAAC,GAAG,IAAC,SAAS,EAAE,MAAM,CAAC,iBAAkB,GACxC,qBAAC,IAAI,IAAC,SAAS,EAAC,gBAAgB,EAAC,KAAK,EAAE,SAAU,uBAAyB,CACtE,CACD,CACD,CACN,CAAC;IACH,CAAC;AACF,CAAC;AAAA","sourcesContent":["import * as React from 'react';\nimport * as styles from './ColorItemStyle.scss';\nimport Color = drawchat.editor.Color;\nimport DrawchatEditorProperties = drawchat.editor.DrawchatEditorProperties;\n\nexport interface ColorItemProps{\n\tkey:number;\n\tcolor:Color;\n\tonSelect:SelectColorHandler;\n\tselected?:boolean;\n}\nexport interface ColorItemState{\n}\nexport interface SelectColorHandler{\n\t():void;\n}\n\nexport class ColorItem extends React.Component<ColorItemProps, ColorItemState> {\n\n\tconstructor(props:ColorItemProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tonSelect:props.onSelect\n\t\t};\n\t}\n\t// componentDidMount(){\n\t// }\n\n\tselectColor(\n\t\t// e:React.SyntheticEvent\n\t):void{\n\t\tthis.props.onSelect();\n\t}\n\n\tprivate getColor(){\n\t\treturn this.props.color ? this.props.color :{r:0,g:0,b:0};\n\t}\n\n\trender(){\n\t\tlet color = this.getColor();\n\t\tvar spanStyle= {\n\t\t\tcolor:`rgb(${color.r},${color.g},${color.b})`\n\t\t};\n\t\treturn(\n\t\t\t<div className={styles.item}>\n\t\t\t\t<div  onClick={(event) => this.selectColor()} className={\n\t\t\t\t\tthis.props.selected ? styles.item__circle_selected + ' ' + styles.item__circle : styles.item__circle\n\t\t\t\t}>\n\t\t\t\t\t<div className={styles.item__circle_cell}>\n\t\t\t\t\t\t<span className=\"material-icons\" style={spanStyle}>format_color_fill</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}
{"version":3,"file":"ColorSelector.js","sourceRoot":"","sources":["ColorSelector.tsx"],"names":[],"mappings":"OAAO,KAAK,KAAK,MAAM,OAAO;OACvB,KAAK,MAAM,MAAM,2BAA2B;OAC5C,EAAC,SAAS,EAAC,MAAM,wBAAwB;AAIhD;IAGC,YAAY,KAAY,EAAC,QAAiB;QACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;AACF,CAAC;AACD;IAGC,YACC,MAAmB,EACnB,OAAY;QAEZ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;AACF,CAAC;AAUD,mCAAmC,KAAK,CAAC,SAAS;IACjD,YAAY,KAAwB;QACnC,MAAM,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAC,CAAC;YAC5D,MAAM,CAAC,IAAI,UAAU,CAAC,KAAK,EAAC,KAAK,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW,CAAC,KAAW,EAAC,KAAY;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC,CAAC;YAClC,MAAM,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,KAAK,EAAC,CAAC,KAAK,KAAK,CAAC,CAAC;QACrD,CAAC,CAAC,CACF,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,MAAM;QACL,MAAM,CAAA,CACL,qBAAC,GAAG,IAAC,SAAS,EAAE,MAAM,CAAC,SAAU,GAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC,KAAK;YACvC,MAAM,CAAC,oBAAC,SAAS,GAAC,GAAG,EAAE,KAAM,EAAC,KAAK,EAAE,UAAU,CAAC,KAAM,EAAC,QAAQ,EAAE,UAAU,CAAC,QAAS,EAAC,QAAQ,EAAE;gBAC/F,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;YAC1C,CAAE,EAAE,CAAA;QACL,CAAC,CAAE,CAEE,CACN,CAAC;IACH,CAAC;AACF,CAAC;AAAA","sourcesContent":["import * as React from 'react';\nimport * as styles from './ColorSelectorStyle.scss';\nimport {ColorItem} from \"./color_item/ColorItem\";\nimport {ColorPalette} from \"./color_palette/ColorPaletteButton\";\nimport Color = drawchat.editor.Color;\n\nexport class ColorValue{\n\tcolor:Color;\n\tselected:boolean;\n\tconstructor(color?:Color,selected?:boolean){\n\t\tthis.color = color;\n\t\tthis.selected = selected;\n\t}\n}\nexport class ColorSelectorState{\n\tcolors:ColorValue[];\n\tpalette:any;\n\tconstructor(\n\t\tcolors:ColorValue[],\n\t\tpalette?:any\n\t){\n\t\tthis.colors = colors;\n\t\tthis.palette = palette;\n\t}\n}\nexport interface ColorSelectorProps {\n\tonSelect:SelectColorHandler;\n\tcolors:Color[];\n\tselectedIndex?:number;\n}\nexport interface SelectColorHandler {\n\t(color:Color):void;\n}\n\nexport class ColorSelector extends React.Component<ColorSelectorProps, ColorSelectorState> {\n\tconstructor(props:ColorSelectorProps) {\n\t\tsuper(props);\n\t\tthis.state = new ColorSelectorState(props.colors.map((color,i)=>{\n\t\t\treturn new ColorValue(color,props.selectedIndex === i);\n\t\t}));\n\t}\n\tselectColor(color:Color,index:number):void{\n\t\tthis.setState(new ColorSelectorState(\n\t\t\tthis.state.colors.map((colorValue,i)=>{\n\t\t\t\treturn new ColorValue(colorValue.color,i === index);\n\t\t\t})\n\t\t));\n\t\tthis.props.onSelect(color);\n\t}\n\trender() {\n\t\treturn(\n\t\t\t<div className={styles.container}>\n\t\t\t\t{this.state.colors.map((colorValue,index)=>{\n\t\t\t\t\treturn <ColorItem key={index} color={colorValue.color} selected={colorValue.selected} onSelect={()=>{\n\t\t\t\t\t\tthis.selectColor(colorValue.color,index);\n\t\t\t\t\t}}/>\n\t\t\t\t})}\n\t\t\t\t{/*<ColorPalette />*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}